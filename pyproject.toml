[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "aws-kms-web-ui"
version = "2.0.0"
description = "The most advanced AWS KMS management platform with enterprise-grade security, AI-powered automation, and a futuristic UI"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "AWS KMS Web UI Team", email = "team@aws-kms-web-ui.com"}
]
maintainers = [
    {name = "AWS KMS Web UI Maintainers", email = "maintainers@aws-kms-web-ui.com"}
]
keywords = [
    "aws", "kms", "encryption", "key-management", "security", "ai", "automation",
    "flask", "python", "web-ui", "enterprise", "monitoring", "analytics"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "Intended Audience :: Information Technology",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Security",
    "Topic :: System :: Systems Administration",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: User Interfaces",
    "Framework :: Flask",
    "Environment :: Web Environment",
    "Natural Language :: English",
]
requires-python = ">=3.8"
dependencies = [
    # Core Framework
    "Flask>=2.3.0",
    "Flask-JWT-Extended>=4.5.0",
    "Flask-Limiter>=3.5.0",
    "Flask-CORS>=4.0.0",
    "Werkzeug>=2.3.0",
    
    # AWS SDK
    "boto3>=1.34.0",
    "botocore>=1.34.0",
    
    # Database
    "SQLAlchemy>=2.0.0",
    
    # Security
    "cryptography>=41.0.0",
    "bcrypt>=4.0.0",
    "PyJWT>=2.8.0",
    
    # AI Integration
    "ollama>=0.1.0",
    "openai>=1.0.0",
    
    # Data Processing
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "python-dateutil>=2.8.0",
    
    # Monitoring & Logging
    "structlog>=23.0.0",
    "prometheus-client>=0.17.0",
    
    # Email & Notifications
    "smtplib2>=0.2.0",
    "slack-sdk>=3.21.0",
    
    # Utilities
    "click>=8.1.0",
    "python-dotenv>=1.0.0",
    "requests>=2.31.0",
    "urllib3>=2.0.0",
    "marshmallow>=3.20.0",
    "pydantic>=2.0.0",
    
    # Optional Dependencies
    "redis>=4.6.0; extra == 'redis'",
    "elasticsearch>=8.0.0; extra == 'elasticsearch'",
    "psycopg2-binary>=2.9.0; extra == 'postgresql'",
    "mysqlclient>=2.1.0; extra == 'mysql'",
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "pytest-asyncio>=0.21.0",
    "pytest-xdist>=3.3.0",
    "pytest-html>=3.2.0",
    "pytest-benchmark>=4.0.0",
    
    # Code Quality
    "black>=23.7.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "bandit>=1.7.5",
    "safety>=2.3.5",
    "pre-commit>=3.3.0",
    
    # Documentation
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.2.0",
    "mkdocstrings>=0.23.0",
    "mkdocstrings-python>=1.5.0",
    
    # Development Tools
    "ipython>=8.14.0",
    "jupyter>=1.0.0",
    "debugpy>=1.7.0",
    "watchdog>=3.0.0",
]

production = [
    "gunicorn>=21.2.0",
    "gevent>=23.7.0",
    "psutil>=5.9.0",
    "supervisor>=4.2.5",
]

monitoring = [
    "prometheus-client>=0.17.0",
    "grafana-api>=1.0.3",
    "datadog>=0.44.0",
    "sentry-sdk>=1.32.0",
]

security = [
    "cryptography>=41.0.0",
    "bcrypt>=4.0.0",
    "PyJWT>=2.8.0",
    "passlib>=1.7.4",
    "python-multipart>=0.0.6",
]

ai = [
    "ollama>=0.1.0",
    "openai>=1.0.0",
    "anthropic>=0.7.0",
    "transformers>=4.30.0",
    "torch>=2.0.0",
    "numpy>=1.24.0",
    "scikit-learn>=1.3.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/aws-kms-web-ui"
Documentation = "https://aws-kms-web-ui.readthedocs.io"
Repository = "https://github.com/yourusername/aws-kms-web-ui.git"
"Bug Tracker" = "https://github.com/yourusername/aws-kms-web-ui/issues"
"Discussions" = "https://github.com/yourusername/aws-kms-web-ui/discussions"
"Security Policy" = "https://github.com/yourusername/aws-kms-web-ui/security/policy"
"Code of Conduct" = "https://github.com/yourusername/aws-kms-web-ui/blob/main/CODE_OF_CONDUCT.md"
"Contributing Guide" = "https://github.com/yourusername/aws-kms-web-ui/blob/main/CONTRIBUTING.md"
"Changelog" = "https://github.com/yourusername/aws-kms-web-ui/blob/main/CHANGELOG.md"
"Download" = "https://github.com/yourusername/aws-kms-web-ui/releases"
"PyPI" = "https://pypi.org/project/aws-kms-web-ui/"

[project.scripts]
aws-kms-web-ui = "app:main"

[project.gui-scripts]
aws-kms-web-ui-gui = "app:main_gui"

[tool.setuptools]
packages = ["app", "scripts", "tests"]

[tool.setuptools.package-data]
app = ["templates/*", "static/**/*"]

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]

[tool.flake8]
max-line-length = 100
extend-ignore = ["E203", "W503", "E501"]
exclude = [
    ".git",
    "__pycache__",
    ".venv",
    "venv",
    ".env",
    "build",
    "dist",
    "*.egg-info",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "boto3.*",
    "botocore.*",
    "flask.*",
    "werkzeug.*",
    "sqlalchemy.*",
    "cryptography.*",
    "bcrypt.*",
    "PyJWT.*",
    "ollama.*",
    "openai.*",
    "pandas.*",
    "numpy.*",
    "structlog.*",
    "prometheus_client.*",
    "slack_sdk.*",
    "marshmallow.*",
    "pydantic.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=app",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=80",
    "--durations=10",
    "--tb=short",
    "--color=yes",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "security: marks tests as security tests",
    "ai: marks tests as AI-related tests",
    "ui: marks tests as UI-related tests",
    "api: marks tests as API-related tests",
]

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests", "venv", ".venv"]
skips = ["B101", "B601"]

[tool.safety]
output = "json"
full-report = true

[tool.commitizen]
name = "cz_conventional_commits"
version = "2.0.0"
tag_format = "v$version"
version_files = [
    "pyproject.toml:version",
    "app/__init__.py:__version__",
]

[tool.pre-commit]
repos = [
    {
        repo = "https://github.com/pre-commit/pre-commit-hooks",
        rev = "v4.4.0",
        hooks = [
            "trailing-whitespace",
            "end-of-file-fixer",
            "check-yaml",
            "check-added-large-files",
            "check-merge-conflict",
            "check-case-conflict",
            "check-docstring-first",
            "check-json",
            "check-merge-conflict",
            "debug-statements",
            "requirements-txt-fixer",
        ],
    },
    {
        repo = "https://github.com/psf/black",
        rev = "23.7.0",
        hooks = ["black"],
    },
    {
        repo = "https://github.com/pycqa/isort",
        rev = "5.12.0",
        hooks = ["isort"],
    },
    {
        repo = "https://github.com/pycqa/flake8",
        rev = "6.0.0",
        hooks = ["flake8"],
    },
    {
        repo = "https://github.com/pre-commit/mirrors-mypy",
        rev = "v1.5.0",
        hooks = ["mypy"],
        additional_dependencies = [
            "types-requests",
            "types-PyYAML",
            "types-python-dateutil",
        ],
    },
    {
        repo = "https://github.com/PyCQA/bandit",
        rev = "1.7.5",
        hooks = ["bandit"],
        args = ["-r", ".", "-f", "json", "-o", "bandit-report.json"],
        exclude = "^tests/",
    },
    {
        repo = "https://github.com/PyCQA/safety",
        rev = "v2.3.5",
        hooks = ["safety"],
        args = ["--full-report"],
    },
]

[tool.mkdocs]
site_name = "AWS KMS Web UI Documentation"
site_description = "Complete documentation for the AWS KMS Web UI platform"
site_author = "AWS KMS Web UI Team"
site_url = "https://aws-kms-web-ui.readthedocs.io"
repo_name = "yourusername/aws-kms-web-ui"
repo_url = "https://github.com/yourusername/aws-kms-web-ui"
edit_uri = "edit/main/docs/"
docs_dir = "docs"
site_dir = "site"

[tool.mkdocs.theme]
name = "material"
palette = [
    {
        "media": "(prefers-color-scheme)",
        "scheme": "default",
        "primary": "indigo",
        "accent": "indigo",
        "toggle": {
            "icon": "material/toggle-switch",
            "name": "Switch to dark mode",
        },
    },
    {
        "media": "(prefers-color-scheme: dark)",
        "scheme": "slate",
        "primary": "indigo",
        "accent": "indigo",
        "toggle": {
            "icon": "material/toggle-switch-off-outline",
            "name": "Switch to light mode",
        },
    },
]

[tool.mkdocs.plugins]
search = {}
mkdocstrings = {
    "handlers": {
        "python": {
            "paths": ["app"],
            "options": {
                "show_source": true,
                "show_root_heading": true,
            },
        },
    },
}

[tool.mkdocs.nav]
- Home: index.md
- Getting Started:
    - Installation: installation.md
    - Quick Start: quickstart.md
    - Configuration: configuration.md
- User Guide:
    - Dashboard: dashboard.md
    - Key Management: key-management.md
    - Encryption: encryption.md
    - Analytics: analytics.md
    - AI Assistant: ai-assistant.md
    - Automation: automation.md
- API Reference:
    - Overview: api.md
    - Authentication: api-auth.md
    - Endpoints: api-endpoints.md
    - Examples: api-examples.md
- Development:
    - Contributing: contributing.md
    - Architecture: architecture.md
    - Testing: testing.md
    - Deployment: deployment.md
- Security:
    - Overview: security.md
    - Best Practices: security-best-practices.md
    - Compliance: security-compliance.md
- Troubleshooting:
    - Common Issues: troubleshooting.md
    - Debug Guide: debug.md
    - Support: support.md

[tool.mkdocs.extra]
social:
    - icon: fontawesome/brands/github
      link: https://github.com/yourusername/aws-kms-web-ui
    - icon: fontawesome/brands/twitter
      link: https://twitter.com/awskmswebui
    - icon: fontawesome/brands/discord
      link: https://discord.gg/awskmswebui

[tool.mkdocs.extra.analytics]
provider = google
property = !G-XXXXXXXXXX

[tool.mkdocs.extra.footer]
copyright = "Copyright &copy; 2024 AWS KMS Web UI Team" 